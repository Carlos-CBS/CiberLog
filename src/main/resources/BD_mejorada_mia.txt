User (
  id UUID PRIMARY KEY,
  name VARCHAR(100),
  email VARCHAR(150) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  role ENUM('admin', 'editor', 'reader') DEFAULT 'reader',
  picture_icon VARCHAR(50) -- ej: "üßë‚Äçüíª" o "icon_hacker" desde el fron end que eliga, usando js, y luego lo guarde en la base de datos: CDN FontAwesome
  bio TEXT,
  social_links JSON, -- o tabla separada si prefieres
  is_verified BOOLEAN DEFAULT FALSE,
  registered_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)

Blog (
  id UUID PRIMARY KEY,
  slug VARCHAR(255) UNIQUE NOT NULL, -- Creara una url amigable
  title VARCHAR(255),
  summary TEXT,
  image_url VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  user_id UUID REFERENCES User(id),
  views INT DEFAULT 0,
  is_published BOOLEAN DEFAULT FALSE,
  difficulty ENUM('basic', 'intermediate', 'advanced')
)

Article (
  id UUID PRIMARY KEY,
  blog_id UUID REFERENCES Blog(id),
  slug VARCHAR(255) NOT NULL,
  title VARCHAR(255),
  content TEXT,
  summary TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  user_id UUID REFERENCES User(id),
  views INT DEFAULT 0,
  is_published BOOLEAN DEFAULT FALSE,
  comment_count INT DEFAULT 0,
  likes_count INT DEFAULT 0,
  difficulty ENUM('basic', 'intermediate', 'advanced')
)

Tag (
  id UUID PRIMARY KEY,
  name VARCHAR(100) UNIQUE,
  logo TEXT
)

ArticleTag (
  id UUID PRIMARY KEY,
  article_id UUID REFERENCES Article(id),
  tag_id UUID REFERENCES Tag(id),
  UNIQUE(article_id, tag_id)
)

Comment (
  id UUID PRIMARY KEY,
  article_id UUID REFERENCES Article(id),
  user_id UUID REFERENCES User(id),
  content TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  likes_count INT DEFAULT 0,
  useful_count INT DEFAULT 0,
  parent_comment_id UUID NULL REFERENCES Comment(id)
)

CommentLike (
  id UUID PRIMARY KEY,
  comment_id UUID REFERENCES Comment(id),
  user_id UUID REFERENCES User(id),
  created_at TIMESTAMP,
  UNIQUE(comment_id, user_id)
)

CommentUseful {
    id,
    comment_id,
    user_id,
    created_at
}

ArticleLike (
  id UUID PRIMARY KEY,
  article_id UUID REFERENCES Article(id),
  user_id UUID REFERENCES User(id),
  created_at TIMESTAMP,
  UNIQUE(article_id, user_id)
)

Resource (
  id UUID PRIMARY KEY,
  article_id UUID REFERENCES Article(id),
  title VARCHAR(255),
  description TEXT,
  file_url TEXT,
  uploaded_by_user_id UUID REFERENCES User(id),
  category ENUM('pdf', 'code', 'image', 'external_link'),
  uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)

UserBookmark (
  id UUID PRIMARY KEY,
  user_id UUID REFERENCES User(id),
  article_id UUID REFERENCES Article(id),
  created_at TIMESTAMP,
  UNIQUE(user_id, article_id)
)
